import { useState, useRef } from "react";
import { motion } from "framer-motion";
import { Vulnerability, getSeverityColor, getSeverityGlowColor } from "@/data/vulnerabilities";
import { Badge } from "@/components/ui/badge";
import { Card } from "@/components/ui/card";
import { Shield, Code2, CheckCircle, XCircle } from "lucide-react";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
  isActive?: boolean;
  isFocused?: boolean;
  onFocus?: () => void;
  onBlur?: () => void;
  style?: React.CSSProperties;
}

export const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({
  vulnerability,
  isActive = false,
  isFocused = false,
  onFocus,
  onBlur,
  style
}) => {
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const cardRef = useRef<HTMLDivElement>(null);

  const handleMouseMove = (e: React.MouseEvent) => {
    if (!cardRef.current) return;
    
    const rect = cardRef.current.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const rotateX = (e.clientY - centerY) / 10;
    const rotateY = (centerX - e.clientX) / 10;
    
    setMousePosition({ x: rotateX, y: rotateY });
  };

  const handleMouseLeave = () => {
    setMousePosition({ x: 0, y: 0 });
  };

  const severityColor = getSeverityColor(vulnerability.severity);
  const severityGlow = getSeverityGlowColor(vulnerability.severity);

  return (
    <motion.div
      ref={cardRef}
      className={`
        group relative cursor-pointer preserve-3d
        ${isFocused ? 'z-50' : 'z-10'}
      `}
      style={{
        ...style,
        transform: `
          rotateX(${mousePosition.x}deg) 
          rotateY(${mousePosition.y}deg)
          ${isFocused ? 'scale(1.2) translateZ(100px)' : 'scale(1)'}
        `,
        transformStyle: 'preserve-3d',
        transition: isFocused ? 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)' : 'transform 0.1s ease-out',
      }}
      onMouseMove={handleMouseMove}
      onMouseLeave={handleMouseLeave}
      onClick={onFocus}
      whileHover={{ scale: isFocused ? 1.2 : 1.05 }}
      whileTap={{ scale: isFocused ? 1.2 : 0.98 }}
    >
      {/* Glow Effect */}
      <div
        className={`
          absolute inset-0 rounded-lg opacity-20 blur-xl
          bg-${severityColor} animate-glow-pulse
          ${isActive ? 'opacity-40' : ''}
        `}
        style={{
          transform: 'translateZ(-10px)',
        }}
      />

      {/* Main Card Container */}
      <Card
        className={`
          relative w-80 h-96 overflow-hidden
          bg-glass-background/10 backdrop-blur-glass
          border border-glass-border/30
          shadow-glass
          ${isActive ? `ring-2 ring-${severityColor}` : ''}
        `}
        style={{
          background: `linear-gradient(135deg, 
            hsla(var(--glass-background), 0.1), 
            hsla(var(--glass-background), 0.05))`,
        }}
      >
        {/* Front Layer - Always Visible */}
        <div 
          className="absolute inset-0 p-6 flex flex-col justify-between"
          style={{
            transform: 'translateZ(20px)',
          }}
        >
          {/* Header */}
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <Badge 
                variant="outline" 
                className={`
                  bg-${severityColor}/20 text-${severityColor} 
                  border-${severityColor}/30
                  shadow-sm
                `}
              >
                <Shield className="w-3 h-3 mr-1" />
                {vulnerability.severity}
              </Badge>
              <span className="text-muted-foreground text-sm font-mono">
                #{vulnerability.number.toString().padStart(3, '0')}
              </span>
            </div>

            <div>
              <h3 className="text-xl font-bold text-foreground mb-2">
                {vulnerability.title}
              </h3>
              <p className="text-muted-foreground text-sm leading-relaxed">
                {vulnerability.summary}
              </p>
            </div>
          </div>

          {/* Category Tag */}
          <div className="flex justify-center">
            <Badge variant="secondary" className="text-xs">
              {vulnerability.category}
            </Badge>
          </div>
        </div>

        {/* Middle Layer - Code Snippet (visible on hover/focus) */}
        <motion.div
          className="absolute inset-0 p-6 flex flex-col justify-center opacity-0 group-hover:opacity-100"
          style={{
            transform: 'translateZ(40px)',
            backgroundColor: 'hsla(var(--background), 0.95)',
          }}
          animate={{
            opacity: isFocused || isActive ? 1 : 0,
          }}
          transition={{ duration: 0.3 }}
        >
          <div className="space-y-4">
            <div className="flex items-center gap-2 text-sm text-muted-foreground">
              <Code2 className="w-4 h-4" />
              Vulnerable Code
            </div>
            <div className="bg-muted/50 rounded-lg p-4 font-mono text-sm">
              <pre className="text-foreground whitespace-pre-wrap">
                {vulnerability.code}
              </pre>
            </div>
          </div>
        </motion.div>

        {/* Back Layer - Mitigation Guidance (visible in focus mode) */}
        {isFocused && (
          <motion.div
            className="absolute inset-0 p-6 flex flex-col justify-between"
            style={{
              transform: 'translateZ(60px)',
              backgroundColor: 'hsla(var(--background), 0.98)',
            }}
            initial={{ opacity: 0, rotateY: 180 }}
            animate={{ opacity: 1, rotateY: 0 }}
            transition={{ duration: 0.5, delay: 0.2 }}
          >
            <div className="space-y-6">
              {/* Do Section */}
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-severity-low">
                  <CheckCircle className="w-4 h-4" />
                  <span className="font-semibold text-sm">Best Practice</span>
                </div>
                <p className="text-sm text-foreground bg-severity-low/10 rounded-lg p-3 border border-severity-low/30">
                  {vulnerability.do}
                </p>
              </div>

              {/* Don't Section */}
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-severity-critical">
                  <XCircle className="w-4 h-4" />
                  <span className="font-semibold text-sm">Avoid</span>
                </div>
                <p className="text-sm text-foreground bg-severity-critical/10 rounded-lg p-3 border border-severity-critical/30">
                  {vulnerability.dont}
                </p>
              </div>
            </div>

            {/* Close Hint */}
            <div className="text-center">
              <p className="text-xs text-muted-foreground">
                Press ESC or click outside to return to orbit
              </p>
            </div>
          </motion.div>
        )}
      </Card>
    </motion.div>
  );
};